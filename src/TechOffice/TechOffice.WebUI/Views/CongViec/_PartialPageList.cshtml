@using PagedList
@using PagedList.Mvc

@model IPagedList<AnThinhPhat.Entities.Results.HoSoCongViecResult>

@{
    AjaxOptions ajaxPaging = new AjaxOptions()
    {
        UpdateTargetId = "tableAdmin",
        HttpMethod = "GET",
    };
}
<div class="clear"></div>
<div class="">
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="col-stt col-xs-1">@Labels.CongViec_List_STT</th>
                    <th class="text-center">@Labels.CongViec_List_NgayTao <br />@Labels.CongViec_List_NgayHetHan</th>
                    <th class="text-center">@Labels.CongViec_List_PhuTrach</th>
                    <th class="text-center">@Labels.CongViec_List_XuLyChinh</th>
                    <th class="text-center">@Labels.CongViec_List_PhoiHop</th>
                    <th class="text-center">@Labels.CongViec_List_TrangThai</th>
                    <th class="text-center">@Labels.CongViec_List_LinhVuc</th>
                    <th class="text-center">@Labels.CongViec_List_NoiDungCongViec</th>
                    <th class="text-center">@Labels.CongViec_List_CacFileDinhKem</th>
                    <th class="text-center">@Labels.CongViec_List_QuaTrinhXuLy</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Any())
                {
                    int i = -1;
                    foreach (var item in Model)
                    {
                        i = i + 1;
                        var fontColor = string.Empty;
                        switch (item.TrangThaiCongViecId)
                        {
                            case 1:
                                fontColor = "text-danger";
                                break;
                            case 2:
                                fontColor = "text-info";
                                break;
                            default:
                                break;
                        }

                        <tr>
                            <td class="@fontColor">@Html.Raw(i + 1)</td>
                            <td class="@fontColor">
                                @item.NgayTao.ToString("dd/MM/yyyy") <br />
                                @if (item.NgayHetHan != null)
                                {
                                    @(((DateTime)(item.NgayHetHan)).ToString("dd/MM/yyyy"))
                                }
                                @*@Html.DisplayFor(x => item.NgayHetHan, "DisplayDate")*@
                            </td>

                            <td class="@fontColor">@item.UserPhuTrach.HoVaTen</td>
                            <td class="@fontColor">@item.UserXyLy.HoVaTen</td>
                            <td class="@fontColor">
                                @foreach (var phoihop in item.CongViecPhoiHopResult)
                                {
                                    <span> @phoihop.UserInfo.UserName</span><br />
                                }
                            </td>
                            <td class="@fontColor">@item.TrangThaiCongViecInfo.IfNotNull(x => x.Name)</td>
                            <td class="@fontColor">@item.LinhVucCongViec.Name</td>
                            <td class="@fontColor">
                                @Html.RouteLink(item.NoiDung,
                                                  routeName: UrlLink.CONGVIEC_DETAIL,
                                                  routeValues: new { guid1 = Guid.NewGuid().ToString("N"), id = item.Id, guid2 = Guid.NewGuid().ToString("N") })
                            </td>
                            <td class="@fontColor">@Html.Raw(item.JsonFiles)</td>
                            <td class="@fontColor">
                                @foreach (var qt in item.CongViecQuaTrinhXuLyResult)
                                {
                                    <span>@string.Format("{0}:{1} {2} {3}: {4}", qt.GioBanHanh, qt.PhutBanHanh, qt.NgayBanHanh?.ToString("dd/MM/yyyy"), qt.NguoiThem, qt.NoiDung)</span><br />
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="10">
                        <div id="contentPager" class="pull-right">
                            @{
                                AnThinhPhat.ViewModel.CongViec.ValueSearchViewModel ValueSearch = new AnThinhPhat.ViewModel.CongViec.ValueSearchViewModel();
                            }
                            @if (ViewBag.ValueSearch != null)
                            {
                                ValueSearch = (AnThinhPhat.ViewModel.CongViec.ValueSearchViewModel)ViewBag.ValueSearch;
                            }
                            @Html.PagedListPager(Model, page => Url.Action("List", "CongViec", new
                       {
                           Page = page,
                           UserId = ValueSearch.UserIds,
                           Role = ValueSearch.Roles,
                           TrangThaiCongViecId = ValueSearch.Status,
                           LinhVucCongViecId = ValueSearch.Areas,
                           NoiDungCongViec = ValueSearch.Content,
                       }),
                           PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(ajaxPaging))
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>