@model AnThinhPhat.ViewModel.Home.ContactViewModel

@using CaptchaMvc.HtmlHelpers

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    AjaxOptions ajaxOption = new AjaxOptions
    {
        HttpMethod = "POST",
        //Url = Url.Action("Contact"),
        OnBegin = "onFeedbackBegin",
        OnComplete = "onFeedbackComplete",
        OnSuccess = "onFeedbackiSuccess",
        OnFailure = "onFeedbackFailure",
    };
}

<style>
    div.form-group > span.glyphicon {
        top: 30px;
    }

        div.form-group > span.glyphicon.glyphicon-refresh:hover {
            cursor: pointer;
        }
</style>

<div class="clear"></div>
<div class="col-xs-12 col-sm-12 col-md-offset-2 col-md-8">
    @using (Html.BeginForm("Contact", "Home", null, FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
    {
        <div class="form-horizontal">
            <div class="form-group">
                <label>Họ tên<span class="required">*</span></label>
                <div>
                    @Html.TextBoxFor(x => Model.FullName, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => Model.FullName)
                </div>
            </div>
            <div class="form-group">
                <label>Email<span class="required">*</span></label>
                <div>
                    @Html.TextBoxFor(x => Model.Email, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => Model.Email)
                </div>
            </div>
            <div class="form-group">
                <label>Tiêu đề<span class="required">*</span></label>
                <div>
                    @Html.TextBoxFor(x => Model.Title, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => Model.Email)
                </div>
            </div>

            <div class="form-group">
                <label>Chọn tài liệu</label>
                <div>
                    <input type="file" id="filesUpload" class="form-control btn btn-info pull-left" style="max-width:300px;" name="files" />
                    @*@Html.TextBoxFor(x => x.Files, htmlAttributes: new { type = "file", multiple = "multiple", @class = "form -control btn btn-info pull-left", id = "filesUpload", style = "max-width:300px;" })*@
                    @*<button type="button" class="btn btn-primary" id="btnUpload" value="Upload" disabled="disabled" style="width:100px;">
                            <span class="glyphicon glyphicon-upload"></span>
                            @Buttons.UploadFiles_Upload
                        </button>*@
                </div>
            </div>
            <div class="form-group">
                <label>Nội dung<span class="required"></span></label>
                <div>
                    @Html.TextAreaFor(x => Model.NoiDung, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => Model.NoiDung)
                </div>
            </div>
            <div class="form-group">
                <label>Mã xác nhận</label>
                @Html.MathCaptcha("", "<label>Nhập mã xác nhận<span class='required'></span></label>", "Xin vui lòng nhập mã xác nhận")
                @Html.ValidationMessageFor(x => Model.CaptchaInputText)
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-primary" id="sub" name="btnSubmit" value="Gửi">
                <input type="submit" class="btn btn-primary" id="sub" name="btnSubmit" value="Hủy bỏ">
            </div>
        </div>
    }
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            onFeedbackBegin = function () { }
            onFeebbackComplete = function () { }
            onFeebbackSuccess = function () { }
            onFeedbackFailure = function () { }
        });
    </script>
}